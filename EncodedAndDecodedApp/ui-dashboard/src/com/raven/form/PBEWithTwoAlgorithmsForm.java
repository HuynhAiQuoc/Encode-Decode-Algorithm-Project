
package com.raven.form;

import com.raven.crypt.pbe.dialog.dialogStatus;
import javax.swing.JOptionPane;
import com.raven.crypt.pbe.dialog.*;
import com.raven.crypto.pbe.algorithms.PBECryptAction;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;


public class PBEWithTwoAlgorithmsForm extends javax.swing.JPanel {
    final String strCryptExtension = "enc";
    StringBuilder strBuilderMessage = new StringBuilder();
    /**
     * Creates new form Form_1
     */
    public PBEWithTwoAlgorithmsForm() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        panelCryptAction2 = new javax.swing.JPanel();
        rdoEncrypt2 = new javax.swing.JRadioButton();
        rdoDecrypt2 = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        ProgressBarStatus = new javax.swing.JProgressBar();
        btnDetails = new javax.swing.JButton();
        scrollFileAction = new javax.swing.JScrollPane();
        tableFileAction = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btnClear = new javax.swing.JButton();
        btnSelect = new javax.swing.JButton();
        btnStart = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(242, 242, 242));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        panelCryptAction2.setBackground(new java.awt.Color(242, 242, 242));
        panelCryptAction2.setBorder(javax.swing.BorderFactory.createTitledBorder("Crypt Action"));

        buttonGroup1.add(rdoEncrypt2);
        rdoEncrypt2.setSelected(true);
        rdoEncrypt2.setText("Encrypt");

        buttonGroup1.add(rdoDecrypt2);
        rdoDecrypt2.setText("Decrypt");

        javax.swing.GroupLayout panelCryptAction2Layout = new javax.swing.GroupLayout(panelCryptAction2);
        panelCryptAction2.setLayout(panelCryptAction2Layout);
        panelCryptAction2Layout.setHorizontalGroup(
            panelCryptAction2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCryptAction2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdoEncrypt2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rdoDecrypt2)
                .addContainerGap(46, Short.MAX_VALUE))
        );
        panelCryptAction2Layout.setVerticalGroup(
            panelCryptAction2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCryptAction2Layout.createSequentialGroup()
                .addGroup(panelCryptAction2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoEncrypt2)
                    .addComponent(rdoDecrypt2))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(242, 242, 242));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Status"));

        btnDetails.setText("Details");
        btnDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetailsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(ProgressBarStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDetails)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(ProgressBarStatus, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDetails, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tableFileAction.setBackground(new java.awt.Color(242, 242, 242));
        tableFileAction.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        scrollFileAction.setViewportView(tableFileAction);

        jPanel2.setBackground(new java.awt.Color(242, 242, 242));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Button Event"));

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnSelect.setText("Select");
        btnSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectActionPerformed(evt);
            }
        });

        btnStart.setText("Start");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnClear)
                .addGap(18, 18, 18)
                .addComponent(btnSelect)
                .addGap(18, 18, 18)
                .addComponent(btnStart)
                .addGap(28, 28, 28)
                .addComponent(btnClose)
                .addGap(55, 55, 55))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("PBEWith...Algorithms");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/raven/icon/lock.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(scrollFileAction)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(panelCryptAction2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(30, 30, 30)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 89, Short.MAX_VALUE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(104, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addComponent(scrollFileAction, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelCryptAction2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        try
        {
            System.exit(0);
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this, ex, "CryptBox Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        try
        {
            boolean boolCryptAct = true;
            
            TableModel objTableModel = tableFileAction.getModel();
            if(objTableModel.getRowCount() != 0)
            {
                if(rdoEncrypt2.isSelected() == true)
                {
                    boolCryptAct = true;
                }
                else if(rdoDecrypt2.isSelected() == true)
                {
                    boolCryptAct = false;
                }

                dialogStart objdialogStart = new dialogStart(boolCryptAct);
                objdialogStart.setVisible(true);
                
                if(objdialogStart.boolStart == true)
                {
                    final String strMessageDigestAlgorithm = objdialogStart.strMessageDigestAlgorithm;
                    final int intPasswordHashIteration = objdialogStart.intPasswordHashIteration;
                    final String strPassword = objdialogStart.strPassword;
                    final boolean boolCryptAction = objdialogStart.boolCryptAction;
                    final boolean boolOriginalFileDelete = objdialogStart.boolOriginalFileDelete;
                    
                    if(boolCryptAction == true)
                    {
                        rdoEncrypt2.setSelected(true);
                        rdoDecrypt2.setSelected(false);
                    }
                    else
                    {
                        rdoEncrypt2.setSelected(false);
                        rdoDecrypt2.setSelected(true);
                    }
                    
                    if(boolCryptAction == true)
                    {
                        SwingUtilities.invokeLater(new Runnable()
                        {
                            public void run()
                            {
                                // The worker
                                PBECryptAction objCryptAction = new PBECryptAction(strMessageDigestAlgorithm, intPasswordHashIteration, strPassword, "encrypt", boolOriginalFileDelete, strCryptExtension, strBuilderMessage, tableFileAction, ProgressBarStatus);

                                // Start the worker. Note that control is returned immediately
                                objCryptAction.execute();
                            }
                        });
                    }
                    else
                    {
                        SwingUtilities.invokeLater(new Runnable()
                        {
                            public void run()
                            {
                                // The worker
                                PBECryptAction objCryptAction = new PBECryptAction(strMessageDigestAlgorithm, intPasswordHashIteration, strPassword, "decrypt", boolOriginalFileDelete, strCryptExtension, strBuilderMessage, tableFileAction, ProgressBarStatus);

                                // Start the worker. Note that control is returned immediately
                                objCryptAction.execute();
                            }
                        });
                    }
                }
            }
            else
            {
                JOptionPane.showMessageDialog(this, "No File(s) has been seleted to start cryptography action", "CryptBox", JOptionPane.INFORMATION_MESSAGE);
            }
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this, ex, "CryptBox Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnStartActionPerformed

    private void btnSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectActionPerformed
        try
        {
            JFileChooser fileopen = new JFileChooser();
            
            if(rdoEncrypt2.isSelected() == true)
            {
                fileopen.setDialogTitle("Open Files to encrypt");
            }
            else if(rdoDecrypt2.isSelected() == true)
            {
                FileFilter objFileFilter = new FileNameExtensionFilter("encrypted file", strCryptExtension);
                fileopen.addChoosableFileFilter(objFileFilter);
                fileopen.setAcceptAllFileFilterUsed(false);
                
                fileopen.setDialogTitle("Open Files to decrypt");
            }
            
            fileopen.setMultiSelectionEnabled(true);
            int ret = fileopen.showDialog(this, "Open");
            
            if (ret == JFileChooser.APPROVE_OPTION)
            {
                /*Clear Values*/
                btnClearActionPerformed(null);
                
                File[] objFiles = fileopen.getSelectedFiles();
                Object[][] objectFiles = new Object[objFiles.length][5];
                
                for(int i=0; i<objFiles.length; i++)
                {
                    objectFiles[i][0] = objFiles[i];
                    objectFiles[i][1] = "In Queue";
                }

                tableFileAction.setModel(new DefaultTableModel(
                    objectFiles,
                    new String [] {"File(s)", "Status", "Sub Status"}));
                
                tableFileAction.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                tableFileAction.getColumnModel().getColumn(0).setPreferredWidth(800);
                tableFileAction.getColumnModel().getColumn(1).setPreferredWidth(300);
                tableFileAction.getColumnModel().getColumn(2).setPreferredWidth(300);
            }
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this, ex, "CryptBox Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSelectActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
       try
        {
            /*Set Column Names for tableFileAction*/
            tableFileAction.setModel(new DefaultTableModel(
                new Object [][] { },
                new String [] 
                {
                    "File(s)", "Status", "Sub Status"
                }
            ));
            
            /*Set Column Width for tableFileActionn*/
            tableFileAction.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            tableFileAction.getColumnModel().getColumn(0).setPreferredWidth(800);
            tableFileAction.getColumnModel().getColumn(1).setPreferredWidth(300);
            tableFileAction.getColumnModel().getColumn(2).setPreferredWidth(300);
            
            //Clear Progress Bar
            ProgressBarStatus.setValue(0);
            
            /*Clear Status Message*/
            strBuilderMessage.setLength(0);
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this, ex, "CryptBox Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetailsActionPerformed
        try
        {
            dialogStatus objdialogStatus = new dialogStatus(strBuilderMessage.toString());
            objdialogStatus.setVisible(true);
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this, ex, "CryptBox Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDetailsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar ProgressBarStatus;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDetails;
    private javax.swing.JButton btnSelect;
    private javax.swing.JButton btnStart;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel panelCryptAction;
    private javax.swing.JPanel panelCryptAction1;
    private javax.swing.JPanel panelCryptAction2;
    private javax.swing.JRadioButton rdoDecrypt;
    private javax.swing.JRadioButton rdoDecrypt1;
    private javax.swing.JRadioButton rdoDecrypt2;
    private javax.swing.JRadioButton rdoEncrypt;
    private javax.swing.JRadioButton rdoEncrypt1;
    private javax.swing.JRadioButton rdoEncrypt2;
    private javax.swing.JScrollPane scrollFileAction;
    private javax.swing.JTable tableFileAction;
    // End of variables declaration//GEN-END:variables
}
